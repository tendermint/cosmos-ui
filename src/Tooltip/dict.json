{
  "abci": "# ABCI \n The application blockchain interface (ABI) protocol connects a state machine and a consensus engine like Tendermint.",
  "account": "# account \n In the context of a blockchain network, an account is a pair of private key and public key addresses. ",
  "address": "# address \n A public string with a human-readable prefix that identifies an account and is obtained by applying mathematical transformations to a public key. ",
  "application-layer": "# application layer \n The top layer of a blockchain software that defines the state and state-transition function. ",
  "application-specific-blockchain": "# application-specific blockchain \n A special purpose blockchain that is tailored for one specific application. ",
  "atom": "# ATOM \n The ATOM is the native staking currency of the Cosmos Hub. ATOM tokens can be bonded to obtain voting power that can be delegated to validators who maintain the Cosmos Hub. ",
  "byzantine": "# Byzantine \n In the context of distributed systems, a Byzantine node is a node that acts maliciously. ",
  "bft": "# BFT \n The ability to tolerate machines failing in arbitrary ways, including becoming malicious, is Byzantine Fault Tolerance (BFT). A BFT consensus algorithm guarantees safety for up to a third of Byzantine, or malicious, actors.",
  "blockchain": "# blockchain \n A distributed digital ledger maintained by a set of validators that remains correct even if some of the validators (less than a third) are malicious. ",
  "bonding": "# bonding \n The process of locking up staking tokens for a period of time to obtain voting power. Bonded tokens give the right to rewards and are exposed to slashing. ",
  "bpos": "# BPoS \n Bonded Proof-of-Stake (PoS) is the name of the Proof-of-Stake design used for the Cosmos Hub and most of the public blockchains in the Cosmos Network. ",
  "consensus-algorithm": "# consensus algorithm \n A consensus algorithm is a process in computer science that achieves agreement on a state value among distributed nodes. ",
  "cosmos": "# Cosmos \n Cosmos is a network of interoperable blockchains. ",
  "cosmos-hub": "# Cosmos Hub \n The first Hub to launch in the Cosmos Network. ",
  "cosmos-sdk": "# Cosmos SDK \n A modular framework that simplifies the process of building secure blockchain applications.",
  "cosmos-voyager": "# Cosmos Voyager \n The user interface to delegate, stake, and engage in governance with the Cosmos Network.",
  "delegator": "# delegator \n Staking token holders that contribute to the security of a blockchain network by delegating the voting power they obtain from bonding to secure and highly available validators.",
  "double-signing": "# double signing \n When a validator signs more than two blocks at the same height that share a common ancestor. Double signing is a fraud and triggers slashing. ",
  "elliptic-curve": "# elliptic curve \n In elliptic curve cryptography, a huge curve is generated to derive a public key from a private key. The chance of collision is 1 in several billions, making it near impossible to derive the private key from the public key.",
  "ethermint": "# Ethermint \n Software that takes the Ethereum Virtual Machine (EVM) and turns it into a Cosmos SDK module. This module can be combined with other SDK modules like staking to create fully-functional Proof-of-Stake (PoS) blockchains that can run Ethereum Smart Contracts.  Ethermint chains are natively compatible with Cosmos. ",
  "fraud": "# fraud \n Faulty behavior committed by a validator as defined by the protocol.",
  "fraud-proof": "# fraud proof \n Cryptographic proof of a fraud. ",
  "full-node": "# full node \n A full node is a node that stores and verifies the entire state of a blockchain. ",
  "gaia": "# Gaia \n  The name of the Cosmos SDK application for the Cosmos Hub.",
  "governance": "# governance \n Blockchain governance is a process that allows participants to vote on-chain using their bonded tokens.",
  "hub": "# Hub \n A blockchain whose purpose is to connect zones while limiting the number of connections and preventing double-spend attacks among zones. ",
  "ibc": "# IBC \n The Inter-Blockchain Communication protocol (IBC) can be thought of as the TCP/IP for blockchains. IBC allows fast-finality blockchains to exchange value and data with each other in a decentralized way. ",
  "ibc-packet": "# IBC packet \n Packets of data that carry messages and fraud proofs from one blockchain to another.",
  "light-client": "# light llient  \n A blockchain client that is a watcher of distributed consensus process that validates only the consensus algorithm and not the state machine transactions within. A light client downloads only the headers of the blocks and verifies the result of its queries to gives users a lightweight alternative to full nodes while providing good security guarantees. ",
  "merkle-proof": "# Merkle proof \n An efficient way of proving that a piece of data is included in a set by repeatedly calculating hashing pairs of nodes until there is only one hash (the Merkle root) left. ",
  "minting": "# minting \n The process of creating new units of tokens. ",
  "mnemonic": "# mnemonic \n A sequence of words that is used as seed to derive private keys. The mnemonic is at the core of each wallet. **Never lose your mnemonic. Write it down on a piece of paper and store it somewhere safe. If you lose it, there is no way to retrieve it. If someone gains access to your mnemonic, they gain access to all the associated accounts.**",
  "module": "# module \n In the context of the Cosmos SDK, a module is a subset of the state machine. A Cosmos SDK app is usually composed of an aggregation of modules. ",
  "peg-zone": "# peg zone \n A blockchain that acts as a bridge between the Cosmos Network and blockchains that do not have fast-finality, like Proof-of-Work (PoW) chains. ",
  "permissionless": "# permissionless \n An open system that everyone can join and participate in. ",
  "pos": "# Proof-of-Stake (PoS) \n A class of consensus mechanisms for blockchains that works by selecting validators in proportion to their quantity of holdings in the associated cryptocurrency. An incentivisation layer that works in conjunction with a consensus layer to prevent Sybil attacks and incentivise validators to behave correctly. ",
  "pow": "# Proof-of-Work (PoW) \n A decentralized consensus mechanism that requires members of a network to expend effort solving an arbitrary mathematical puzzle to deter denial of service attacks and other service abuses.",
  "private-key": "# private key \n A secret piece of information that is used to sign messages. In the blockchain context, a private key identifies the owner of an account and should never be shared.",
  "public-key": "# public key  \n A public key is a piece of information that is obtained by applying a one-way mathematical function on a private key. From the public key, an address can be derived. ",
  "rewards": "# rewards \n Newly minted tokens and transactions fees that are given out as rewards to bonded staking token holders. ",
  "scalability": "# scalability  \n A system that is able to accommodate a growing amount of requests. ",
  "signature": "# signature \n A piece of digital cryptographic information that proves the owner of a given private key approved of a given message without revealing the private key. ",
  "sharding": "# sharding \n A scalability method that splits the database in multiple shards so that each shard contains a subset of the state.",
  "slashing": "# slashing \n When evidence of a validator fraud is reported, the bonded stake that was delegated to this validator is partially destroyed. This process is called slashing. ",
  "smart-contract": "# smart contract  \n Account holding object that contains code functions. Smart contracts are usually deployed on blockchains that have a virtual machine as part of their application layer. ",
  "sovereignty": "# sovereignty  \n A sovereign blockchain application is an app whose governance system has full authority over the blockchain on which it runs. This governance includes having its own independent validator set. ",
  "state-machine": "# state machine \n A program that holds a state (for example, a list of accounts and balances for a cryptocurrency) and modifies the state when inputs are received.",
  "state-transition": "# state transition  \n Transitions from one state to another are triggered by transactions or by automatic messages at the beginning and at the end of each block. ",
  "tendermint": "# Tendermint \n Tendermint is both a consensus engine and a BFT consensus algorithm. State machines can be built in any programming language on top of Tendermint, which takes care of replication. ",
  "testnet": "# testnet \n A blockchain network that is dedicated to testing the software and does not consume real tokens. ",
  "token": "# token \n A digital asset that is usually stored and secured by a blockchain. ",
  "tx": "# transaction \n Signed messages that trigger state transitions. ",
  "tx-fees": "# transaction fees \n Transactions in a blockchain network include a fee that is paid with tokens in order for the transactions to be processed. ",
  "validator": "# validator \n Special full nodes that take part in the consensus algorithm to collectively add blocks to the blockchain. ",
  "validator-set": "# validator set \n The group of validators that are actively participating in consensus. On the Cosmos Hub, the top 125 validator candidates with the most voting power form the validator set. ",
  "voting-power": "# voting power \n When staking token are bonded, a proportional amount of voting power is obtained. This voting power can be delegated to a validator candidate. ",
  "zone": "# zone \n Zones are regular application-specific blockchains in the Cosmos Network. Zone blockchains can communicate with each other, usually by connecting to hubs by using IBC. "
}
